
@model Ame.Gaas.Admin.Models.ObjetivoView
@{
    ViewBag.Title = "AME - Gaas Admin";
}

<h2>Cadastro de objetivo</h2>


@using (Html.BeginForm("Create", "Objetivo", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.Label("Nome", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Data para iniciar", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dataIniciar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dataIniciar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Data de expiração", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dataExpiracao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dataExpiracao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Ativo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ativo)
                @Html.ValidationMessageFor(model => model.ativo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <hr />

    <div class="form-group">
        @Html.Label("Objetivo Mini Game", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.listaMiniGames,
            new SelectList(Model.listaMiniGameDisponiveis().ToList(), "id", "nome"),
            "Selecione", new { @class = "objMiniGame selectpicker" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Permanência no Jogo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.parametroObjCompletado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.parametroObjCompletado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Valor CashIn", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vlrCashIn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vlrCashIn, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" id="adicionarMiniGame" value="Add Mini Game" class="btn btn-default" />
        </div>
    </div>

    <hr />

    <div class="form-group">

        <table class="table tblMiniGames tblMiniGames">
            <thead>
                <tr>
                    <th>&nbsp;</th>
                    <th>Nome</th>
                    <th>Permanência Jogo (segundos)</th>
                    <th>Cash Pgto</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

    </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="persistirObj" value="Salvar" class="btn btn-primary" />
            </div>
        </div>

    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script type="text/javascript">


        var tableGames = $(".tblMiniGames tbody");
        var objMiniGameArray = [];


        function clearTable() {

            tableGames.find("tr").remove();
        }

        function fillTable(contentTbl) {

            clearTable();

            $.each(contentTbl, function (key, value) {


                var miniGame = value;

                //alert(miniGame.nome);

                tableGames.append("<tr><th><a href=\"javascript:void(0);\" onclick=\"javascript: deletarObjMiniGame('" + (miniGame.id) + "');\">Deletar</a></th><td>" + (miniGame.nome) + "</td><td>" + (miniGame.parametroObjCompletado) + " segs.</td><td>" + (miniGame.vlrCashIn) + "</td><tr>");


            });

        }


        function deletarObjMiniGame(vlr) {

            var index = objMiniGameArray.findIndex(x => x.id === vlr);

            //alert(index);
            //alert(objMiniGameArray.length);
            objMiniGameArray.splice(index, 1);
            //alert(objMiniGameArray.length);


            fillTable(objMiniGameArray);

        }

        function NewGuid() {
            var sGuid = "";
            for (var i = 0; i < 32; i++) {
                sGuid += Math.floor(Math.random() * 0xF).toString(0xF);
            }
            return sGuid;
        }


        $(document).ready(function () {


            $("#adicionarMiniGame").click(function (e) {

                e.preventDefault();

                if (objMiniGameArray.length < 5) {

                    var flagIncluir = true;
                    var miniGame = new Object();
                    miniGame.id = NewGuid();
                    miniGame.nome = $('#listaMiniGames option:selected').text();
                    miniGame.ativo = "true";
                    miniGame.parametroObjCompletado = $("#parametroObjCompletado").val();
                    miniGame.vlrCashIn = $("#vlrCashIn").val();

                    var gameId = $('#listaMiniGames option:selected').val()

                    for (var i = 0; i < objMiniGameArray.length; i++) {
                        var objGame = objMiniGameArray[i];

                        if (objGame.nome == miniGame.nome) {
                            flagIncluir = false;
                        }

                    }

                    if (gameId == "") {
                        flagIncluir = false;
                    }

                    if (flagIncluir == true) {
                        objMiniGameArray.push(miniGame);
                    }


                    fillTable(objMiniGameArray);

                    //var urlCall = "/Objetivo/AdicionarMiniGame";

                    //$.ajax({
                    //    type: "POST",
                    //    url: urlCall,
                    //    data: JSON.stringify(miniGame),
                    //    contentType: "application/json; charset=utf-8",
                    //    dataType: "json",
                    //    success: function (r) {
                    //        alert(r);
                    //    }
                    //});
                    //return false;

                }

            });

            $("#persistirObj").click(function (e) {

                e.preventDefault();

                var miniGame = new Object();
                miniGame.nome = $("#nome").val();
                miniGame.ativo = "true";
                miniGame.parametroObjCompletado = 0;
                miniGame.vlrCashIn = 0.00;
                miniGame.dataIniciar = $("#dataIniciar").val();
                miniGame.dataExpiracao = $("#dataExpiracao").val();
                miniGame.listaMiniGames = objMiniGameArray;

                if (objMiniGameArray.length > 0) {

                    var urlCall = "/Objetivo/Create";

                    $.ajax({
                        type: "POST",
                        url: urlCall,
                        data: JSON.stringify(miniGame),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (r) {

                            if (r.success) {
                                window.location = "/Objetivo/Index";
                            }

                        },
                        error: function (r) {
                            alert("Ocorreu erro para salvar o objetivo!");
                        }

                    });
                    return false;

                }
            });

        });

    </script>
